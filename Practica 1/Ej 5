{5. Realizar un programa para una tienda de celulares, que presente un menú con opciones para:
a. Crear un archivo de registros no ordenados de celulares y cargarlo con datos ingresados desde un archivo de texto denominado
“celulares.txt”. Los registros correspondientes a los celulares deben contener: código de celular, nombre, descripción, marca,
precio, stock mínimo y stock disponible.
b. Listar en pantalla los datos de aquellos celulares que tengan un stock menor al stock mínimo.
c. Listar en pantalla los celulares del archivo cuya descripción contenga una cadena de caracteres proporcionada por el usuario.
d. Exportar el archivo creado en el inciso a) a un archivo de texto denominado “celulares.txt” con todos los celulares del mismo. El archivo de texto
generado podría ser utilizado en un futuro como archivo de carga (ver inciso a), por lo que debería respetar el formato dado para este tipo de archivos
en la NOTA 2.
NOTA 1: El nombre del archivo binario de celulares debe ser proporcionado por el usuario.
NOTA 2: El archivo de carga debe editarse de manera que cada celular se especifique en tres líneas consecutivas. En la primera se
especifica: código de celular, el precio y marca, en la segunda el stock disponible, stock mínimo y la descripción y en la
tercera nombre en ese orden. Cada celular se carga leyendo tres líneas del archivo “celulares.txt”.}
program fod;
type
	celular = record
			cod: integer;
			nom: string;
			desc: string;
			marca: string;
			precio: real;
			s_min: integer;
			s_dis: integer;
	end;
	archivo = file of celular;
procedure CrearArc(var arc_log: archivo);
var
	arc_fis: string[10];
	cel: celular;
	arc_tex: text;
begin
	write('Ingrese nombre del archivo: ');
	readln(arc_fis);
	assign(arc_log,arc_fis);
	rewrite(arc_log);
	assign(arc_tex,'celulares.txt');
	reset(arc_tex);
	while not(EOF(arc_tex)) do begin
		readln(arc_tex,cel.cod,cel.nom,cel.desc,cel.marca,cel.precio,cel.s_min,cel.s_dis);
		write(arc_log,cel);
	end;
	close(arc_log);
	close(arc_tex);
end;
procedure imprimir(cel: celular);
begin
	write('Codigo: ',cel.cod);
	write(', Nombre: ',cel.nom);
	write(', Descripcion: ',cel.desc);
	write(', Marca: ',cel.marca);
	write(', Precio: ',cel.precio);
	write(', Stock Mínimo: ',cel.s_min);
	write(', Stock Disponible: ',cel.s_dis);
end;
procedure StockMenor(var arc_log: archivo);
var
	arc_fis: string[10];
	cel: celular;
begin
	write('Ingrese nombre del archivo: ');
	readln(arc_fis);
	assign(arc_log,arc_fis);
	reset(arc_log);
	writeln('Lista de celulares con stock disponible menor al minimo: ');
	while not(EOF(arc_log)) do begin
		read(arc_log,cel);
		if(cel.s_min > cel.s_dis) then imprimir(cel);
	end;
end;
procedure BuscarDesc(var arc_log: archivo);
var
	arc_fis: string[10];
	cel: celular;
	desc: string;
begin
	write('Ingrese nombre del archivo: ');
	readln(arc_fis);
	assign(arc_log,arc_fis);
	reset(arc_log);
	write('Ingrese descripcion a buscar: ');
	readln(desc);
	writeln('Lista de celulares con descripcion dada: ');
	while not(EOF(arc_log)) do begin
		read(arc_log,cel);
		if(cel.desc = desc) then imprimir(cel);
	end;
end;
var
	arc_log: archivo;
	n: integer;
begin
	write('Bienvenido. ');
	repeat begin
		writeln('Para crear un archivo seleccione 1.');
		writeln('Para listar los celulares con stock disponible menor al mínimo seleccione 2.');
		writeln('Para listar todos los celulares con una descripcion específica seleccione 3.');
		writeln('Para finalizar el programa seleccione 0.');
		readln(n);
		if (n = 1) then CrearArc(arc_log)
		else if (n = 2) then StockMenor(arc_log)
		else if (n = 3) then BuscarDesc(arc_log)
	end;
	until (n = 0);
end.
